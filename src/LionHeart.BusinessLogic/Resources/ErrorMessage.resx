<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BasketEntriesFound" xml:space="preserve">
    <value>Записи товаров найдены</value>
  </data>
  <data name="BasketEntriesNotFound" xml:space="preserve">
    <value>Записи товаров не найдены</value>
  </data>
  <data name="BasketEntriesNotRemoved" xml:space="preserve">
    <value>Товары не были удалены из корзины</value>
  </data>
  <data name="BasketEntryCreated" xml:space="preserve">
    <value>Товар добавлен в корзину</value>
  </data>
  <data name="BasketEntryDeleted" xml:space="preserve">
    <value>Товар удален из корзины</value>
  </data>
  <data name="BasketEntryFound" xml:space="preserve">
    <value>Товар найден в корзине</value>
  </data>
  <data name="BasketEntryNotCreated" xml:space="preserve">
    <value>Товар не добавлен в корзину</value>
  </data>
  <data name="BasketEntryNotDeleted" xml:space="preserve">
    <value>Товар не удален из корзины</value>
  </data>
  <data name="BasketEntryNotFound" xml:space="preserve">
    <value>Товар не найден в корзине</value>
  </data>
  <data name="BasketEntryNotUpdated" xml:space="preserve">
    <value>Товар в корзине не обновлен</value>
  </data>
  <data name="BasketEntryUpdated" xml:space="preserve">
    <value>Товар в корзине обновлен</value>
  </data>
  <data name="CategoriesNotFound" xml:space="preserve">
    <value>Категории не были найдены</value>
  </data>
  <data name="CategoryNotCreated" xml:space="preserve">
    <value>Категория не была создана</value>
  </data>
  <data name="CategoryNotFound" xml:space="preserve">
    <value>Категория не была найдена</value>
  </data>
  <data name="CategoryNotRemoved" xml:space="preserve">
    <value>Категория не была удалена</value>
  </data>
  <data name="CategoryNotUpdated" xml:space="preserve">
    <value>Категория не была обновлена</value>
  </data>
  <data name="CompanyNotFound" xml:space="preserve">
    <value>Компания не была найдена</value>
  </data>
  <data name="ExceptionMessage" xml:space="preserve">
    <value>Исключение: </value>
  </data>
  <data name="FavoriteProductNotCreated" xml:space="preserve">
    <value>Продукт не был добавлен в избранное</value>
  </data>
  <data name="FavoriteProductNotFound" xml:space="preserve">
    <value>Продукт в избранном не был найден </value>
  </data>
  <data name="FavoriteProductNotRemoved" xml:space="preserve">
    <value>Продукт не был удален из избранного</value>
  </data>
  <data name="FavoriteProductsNotFound" xml:space="preserve">
    <value>Продукты в избранном не были найдены</value>
  </data>
  <data name="FeedbackNotCreated" xml:space="preserve">
    <value>Отзыв не был создан</value>
  </data>
  <data name="FeedbackNotFound" xml:space="preserve">
    <value>Отзыв не был найден</value>
  </data>
  <data name="FeedbackNotRemoved" xml:space="preserve">
    <value>Отзыв не был удален</value>
  </data>
  <data name="FeedbacksNotFound" xml:space="preserve">
    <value>Отзывы не были найдены</value>
  </data>
  <data name="FileNotImage" xml:space="preserve">
    <value>Переданный файл не является картинкой</value>
  </data>
  <data name="ImageNotCreated" xml:space="preserve">
    <value>Картинка не была добавлена</value>
  </data>
  <data name="InternalServerError" xml:space="preserve">
    <value>Внутренняя проблема сервера</value>
  </data>
  <data name="NotificationNotCreated" xml:space="preserve">
    <value>Уведомление не было создано</value>
  </data>
  <data name="NotificationNotFound" xml:space="preserve">
    <value>Уведомление не было найдено</value>
  </data>
  <data name="NotificationNotRemoved" xml:space="preserve">
    <value>Уведомление не было удалено</value>
  </data>
  <data name="NotificationsNotCreated" xml:space="preserve">
    <value>Уведомления не были созданы</value>
  </data>
  <data name="NotificationsNotFound" xml:space="preserve">
    <value>Уведомления не найдены</value>
  </data>
  <data name="OrderCreated" xml:space="preserve">
    <value>Заказ был создан</value>
  </data>
  <data name="OrderFound" xml:space="preserve">
    <value>Заказ был найден</value>
  </data>
  <data name="OrderNotFound" xml:space="preserve">
    <value>Заказ не был найден</value>
  </data>
  <data name="OrdersFound" xml:space="preserve">
    <value>Заказы найдены</value>
  </data>
  <data name="OrdersNotFound" xml:space="preserve">
    <value>Заказы не найдены</value>
  </data>
  <data name="ProductNotCreated" xml:space="preserve">
    <value>Продукт не был создан</value>
  </data>
  <data name="ProductNotFound" xml:space="preserve">
    <value>Продукт не был найден</value>
  </data>
  <data name="ProductNotRemoved" xml:space="preserve">
    <value>Продукт не был удален</value>
  </data>
  <data name="ProductNotUpdated" xml:space="preserve">
    <value>Продукт не был обновлен</value>
  </data>
  <data name="ProductsNotEnough" xml:space="preserve">
    <value>На складе нет нужного количества продуктов</value>
  </data>
  <data name="ProductsNotFound" xml:space="preserve">
    <value>Продукты не были найдены</value>
  </data>
  <data name="ProductUnitNotCreated" xml:space="preserve">
    <value>Единица продукта не была добавлена</value>
  </data>
  <data name="ProductUnitNotFound" xml:space="preserve">
    <value>Единица продукта не была найдена</value>
  </data>
  <data name="ProductUnitNotRemoved" xml:space="preserve">
    <value>Единица продукта не была удалена</value>
  </data>
  <data name="ProductUnitNotUpdated" xml:space="preserve">
    <value>Единица продукта не была обновлена</value>
  </data>
  <data name="ProductUnitsNotCreated" xml:space="preserve">
    <value>Единицы продукта не были добавлены</value>
  </data>
  <data name="ProductUnitsNotFound" xml:space="preserve">
    <value>Единицы продукта не были найдены</value>
  </data>
  <data name="ProductUnitsNotUpdated" xml:space="preserve">
    <value>Единицы продукта не были обновлены</value>
  </data>
</root>